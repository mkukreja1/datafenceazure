{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environment": {
          "type": "string"
		},
		"project": {
		  "type": "string"
		},
		"topicName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Event Grid custom topic."
            }
        },
        "subscriptionName": {
            "type": "string",
            "defaultValue": "[concat('topicSubscription-', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name of the Event Grid custom topic's subscription."
            }
        },
        "eventHubNamespace": {
            "type": "string",
            "metadata": {
                "description": "The name of the Event Hubs namespace."
            }
        },
        "eventHubName": {
            "type": "string",
            "metadata": {
                "description": "The name of the event hub."
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "The name of the storage account"
            }
        },
        "storageAccountContainerName": {
            "type": "string",
            "metadata": {
                "description": "The name of the storage account container."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location in which the Event Grid resources should be deployed."
            }
        }
    },
	"variables": {
        "eventHubNamespace": "[concat(parameters('environment'), '-', parameters('project'), '-', parameters('eventHubNamespace'))]",
		"eventHubName": "[concat(parameters('environment'), '-', parameters('project'), '-', parameters('eventHubName'))]",
		"storageAccountName": "[concat(parameters('environment'), parameters('project'), parameters('storageAccountName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.EventGrid/topics",
            "apiVersion": "2020-06-01",
            "name": "[parameters('topicName')]",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[variables('eventHubNamespace')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "isAutoInflateEnabled": true,
                "maximumThroughputUnits": 7
            },
            "resources": [
                {
                    "type": "EventHubs",
                    "apiVersion": "2017-04-01",
                    "name": "[variables('eventHubName')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace'))]"
                    ],
                    "properties": {
                        "messageRetentionInDays": 1,
                        "partitionCount": 2
                    }
                }
            ]
        },
        {
            "scope": "[format('Microsoft.EventGrid/topics/{0}', parameters('topicName'))]",
            "type": "Microsoft.EventGrid/eventSubscriptions",
            "apiVersion": "2020-06-01",
            "name": "[parameters('subscriptionName')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/topics', parameters('topicName'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventHubs', variables('eventHubNamespace'), variables('eventHubName'))]"
            ],
            "properties": {
                "destination": {
                    "endpointType": "EventHub",
                    "properties": {
                        "resourceId": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespace'), variables('eventHubName'))]"
                    }
                },
                "filter": {
                    "isSubjectCaseSensitive": false
                }
            }
        },
        {
              "name": "[variables('storageAccountName')]",
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-02-01",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "location": "[parameters('location')]",
              "properties": {
                    "supportsHttpsTrafficOnly": true
                  },
              "tags": {
                "owner":"data engineering",
                "project":"lakehouse",
                "environment":"development"
              },
			  "resources": [
				{
				  "name": "[concat('default/', parameters('storageAccountContainerName'))]",
				  "type": "blobServices/containers",
				  "apiVersion": "2019-06-01",
				  "dependsOn": [
					"[variables('storageAccountName')]"
				  ],
				  "properties": {
					"publicAccess": "None"
				  }
				}
			  ]
        }
    ],
    "outputs": {
        "endpoint": {
            "type": "string",
            "value": "[reference(parameters('topicName')).endpoint]"
        }
    }
}